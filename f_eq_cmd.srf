$PBExportHeader$f_eq_cmd.srf
$PBExportComments$Control equipment function
global type f_eq_cmd from function_object
end type

forward prototypes
global subroutine f_eq_cmd (string as_cmd, string as_eq)
end prototypes

global subroutine f_eq_cmd (string as_cmd, string as_eq);//////////////////////////////////////////////////////////////
//
// Subroutine f_eq_cmd(string as_cmd, string as_eq)
//
// Description: send command to the selected TVM/PEMs
//
// Arguments: as_cmd - command
//				  as_eq - equipment list, e.g. tvm123_1,tvm23_2,
//
//////////////////////////////////////////////////////////////
string	ls, ls_loc, ls_eq, ls_msg="A request", ls_uid
int		li, li_loc, li_eq, li_type=1

ls_uid=Trim(gnv_syscon.of_getuserID())
if ls_uid<>"" then ls_msg+=" by "+ls_uid
		
if Lower(Left(as_eq,3))="pem" then li_type=2

as_cmd=Upper(as_cmd)
choose case as_cmd
	case "RESET"
		ls="This action acknowledges and clears the alarm conditions of the selected TVM(s), which will be turned back on when status data are received again from the physical equipment(s). Are you sure you want to proceed?"
	case "POLL"
		ls_msg+=" to poll TVM <#> "
	case "INSVC"
		ls="Are you sure you want to put the selected TVM(s) into service mode?"
		ls_msg+=" to set TVM <#> into service mode "
	case "OOS"
		ls="Are you sure you want to take the selected TVM(s) out of service?"
		ls_msg+=" to take TVM <#> out of service "
	case "REBOOT"
		ls="Are you sure you want to restart the selected TVM(s)?"
		ls_msg+=" to reboot TVM <#> "
	case "SHUTDOWN"
		ls="Once a TVM is shutdown, it cannot be restarted or controlled remotely. Are you sure you want to proceed with the action?"
		ls_msg+=" to shutdown TVM <#> "
	case else
		RETURN
end choose

if ls<>"" then
	if li_type=2 then ls=f_replace(ls,"TVM","PEM")
	if MessageBox(gnv_syscon.of_gettitle(),ls,Question!,YesNo!,2)=2 then RETURN
end if
if li_type=2 then ls_msg=f_replace(ls_msg,"TVM","PEM")

if UpperBound(gnv_syscon.ib_parm)>0 then
	if gnv_syscon.ib_parm[1] then ls_msg=Replace(ls_msg,Pos(ls_msg,"<#>")+3,0," at station <S>")
end if

do
	li=Pos(as_eq,",")
	if li>0 then
		ls=Left(as_eq,li - 1)
		as_eq=Mid(as_eq,li+1)

		ls_loc=Mid(ls,Pos(ls,"_")+1)
		ls_eq=Mid(Left(ls,Pos(ls,"_") - 1),4)
		li_loc=Integer(ls_loc)
		li_eq=Integer(ls_eq)

		if as_cmd="RESET" then
			UPDATE gfi_eq SET status=0, status_trim=0, status_hpr=0, status_btp=0,
									status_bst=0, status_ctp=0, status_cbx=0, status_crd=0,
									status_pin=0, status_smc=0, status_prn=0, status_ups=0, status_cpu=0
			WHERE loc_n=:li_loc AND eq_type=:li_type AND eq_n=:li_eq;
			if SQLCA.SQLCode<0 then GOTO ERR

			UPDATE gfi_eq_status SET flags=0, alm_flags=0, srv_flags=16, sys_flags=0, cnf_flags=0,
											 trim0_flags=0, trim1_flags=0, trim2_flags=0, trim3_flags=0,
											 hpr1_flags=0, hpr2_flags=0, btp_flags=0, ctp_flags=0, cbx_flags=0,
											 ups_flags=0, pinpad_flags=0, smtcd_flags=0, prn_flags=0, kbd_flags=0
			WHERE loc_n=:li_loc AND eq_type=:li_type AND eq_n=:li_eq AND st_id=0;
			if SQLCA.SQLCode<0 then GOTO ERR

			COMMIT;

			MessageBox(gnv_syscon.of_gettitle(),"TVM "+ls_eq+" status has been reset to normal.")
		else
			ls=","+ls_loc+","+String(li_type)+","+ls_eq+","+gnv_syscon.of_getuserID()
			if f_nmexec("gficmd.exe -tEQCMD,"+as_cmd+ls,FALSE) then
				if gnv_syscon.ib_log_info then
					ls=f_replace(f_replace(ls_msg,"<#>",ls_eq),"<S>",ls_loc)+"has been submitted"
					f_log(ls)
				end if
			else
				ls=f_replace(f_replace(ls_msg,"<#>",ls_eq),"<S>",ls_loc)+"failed"
				if gnv_syscon.ib_log_err then f_log(ls+"~r~n"+Message.StringParm)
				MessageBox(gnv_syscon.of_gettitle(),ls+". Please check the log file for more details.",StopSign!)
				RETURN
			end if
		end if
	end if
loop while li>0

if as_cmd<>"RESET" then
	ls=f_replace(f_replace(ls_msg,gnv_syscon.of_if(li_type=2,"PEM","TVM")+" <#>","selected "+gnv_syscon.of_if(li_type=2,"PEM","TVM")+"(s)")," at station <S>","")+"has been submitted"
	MessageBox(gnv_syscon.of_gettitle(),ls+".")
end if

RETURN

ERR:
ls=SQLCA.SQLErrText
ROLLBACK;
if ls_uid<>"" then
	if gnv_syscon.ib_log_db then f_log("Resetting "+gnv_syscon.of_if(li_type=2,"PEM","TVM")+" "+ls_eq+" status by "+ls_uid+" failed~r~n"+ls)
else
	if gnv_syscon.ib_log_db then f_log("Resetting "+gnv_syscon.of_if(li_type=2,"PEM","TVM")+" "+ls_eq+" status failed~r~n"+ls)
end if
MessageBox(gnv_syscon.of_gettitle(),"Resetting "+gnv_syscon.of_if(li_type=2,"PEM","TVM")+" "+ls_eq+" status failed.~r~n~r~n"+ls,StopSign!)

end subroutine

